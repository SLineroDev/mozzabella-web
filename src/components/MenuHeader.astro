---

---

<section>
  <header class='container'>
    <h2>LA CARTA</h2>
    <h3><span>Pizzas</span> hechas con mucho cari√±o</h3>
  </header>
  <nav class='menu-nav'>
    <ul class='container'>
      <li id='Pizzas'>Pizzas</li>
      <li id='Ensaladas'>Ensaladas</li>
      <li id='Complementos'>Complementos</li>
      <li id='Postres'>Postres</li>
      <li id='Bebidas'>Bebidas</li>
    </ul>
  </nav>
</section>

<style lang='scss'>
  section {
    background-color: var(--primary);
    position: sticky;
    top: 101px;
    left: 0;

    &::after {
      display: block;
      opacity: 0;
      background: transparent;
      height: 100px;
    }
    header {
      padding-block: 2rem;
      h2 {
        text-align: center;
        font-weight: 300;
        font-size: var(--font-xl);
      }
      h3 {
        text-align: center;
        font-weight: 400;
        font-family: var(--font-serif);
        font-size: var(--font-2xl);
        span {
          font-style: italic;
          color: var(--accent-primary);
        }
      }
    }
    nav {
      border-top: var(--border-primary);
      border-bottom: var(--border-primary);
      ul {
        display: flex;
        justify-content: space-between;
        gap: 1rem;
        padding-block: 1.5rem;
        overflow-x: auto;
        li {
          font-weight: 300;
          text-transform: uppercase;
          text-decoration: none;
          padding: 0.5rem 1rem;

          border: transparent 2px solid;
          border-radius: 50%;

          transition:
            border-color 0.3s ease-in-out,
            color 0.3s ease-in-out;
          &:hover {
            cursor: pointer;
          }
          &:hover,
          &.active {
            border-color: var(--accent-primary);
            color: var(--accent-primary);
          }
        }
      }
    }
  }

  @media (hover: none) {
    li:hover {
      color: inherit;
      border-color: inherit;
    }
  }
</style>

<script>
  let disableScroll = false;
  function activeLink(list: Element, allList: NodeListOf<Element>) {
    list.scrollIntoView({ block: 'nearest', inline: 'center' });
    for (let list of allList) list.classList.remove('active');
    list.classList.add('active');
  }

  function navigateToSection(section: Element) {
    const top = section.getBoundingClientRect().top;
    disableScroll = true;
    window.scrollTo({
      top: top + window.scrollY - 300,
      behavior: 'smooth'
    });
    setTimeout(() => {
      disableScroll = false;
    }, 1000);
  }

  function isInViewportInsideStickyNav(element: Element) {
    console.log(element.getBoundingClientRect());
    const rect = element.getBoundingClientRect();
    return rect.top < 324 && rect.bottom > 324;
  }

  window.addEventListener('DOMContentLoaded', function () {
    const allList = document.querySelectorAll('nav.menu-nav ul li');
    for (let list of allList) {
      list.addEventListener('click', function () {
        activeLink(list, allList);
        const id = list.getAttribute('id');
        navigateToSection(document.querySelector('section.menu#' + id)!);
      });
    }
    const sections = document.querySelectorAll('section.menu');
    window.addEventListener(
      'scroll',
      function () {
        if (disableScroll) return;
        // Get its bounding client rectangle
        if (!sections) return;
        for (let section of sections) {
          if (isInViewportInsideStickyNav(section)) {
            const target = document.querySelector(`nav.menu-nav li#${section.id}`);
            if (target) activeLink(target, allList);
          }
        }
      },
      false
    );
  });
</script>
